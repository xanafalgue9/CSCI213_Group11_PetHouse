@page "/users/create"
@using Microsoft.EntityFrameworkCore
@using PetHouse.Models
@inject IDbContextFactory<PetHouse.Data.PetHouseContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>User Registration</PageTitle>

<h2>User Registration</h2>

<EditForm method="post" Model="User" OnValidSubmit="AddUser" FormName="UserRegisterForm" Enhance>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset>
        <legend>Account Details</legend>

        <div class="mb-3">
            <label for="username" class="form-label">Username:</label>
            <InputText id="username" class="form-control" @bind-Value="User.Username" />
            <ValidationMessage For="() => User.Username" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password:</label>
            <InputText id="password" class="form-control" type="password" @bind-Value="User.Password" />
            <small class="form-text text-muted">
                Password should be 8-30 characters long and include at least one letter, number, and special character.
            </small>
            <ValidationMessage For="() => User.Password" class="text-danger" />
        </div>
    </fieldset>

    <fieldset>
        <legend>Personal Information</legend>

        <div class="mb-3">
            <label for="firstName" class="form-label">First Name:</label>
            <InputText id="firstName" class="form-control" @bind-Value="User.FirstName" />
            <ValidationMessage For="() => User.FirstName" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="lastName" class="form-label">Last Name:</label>
            <InputText id="lastName" class="form-control" @bind-Value="User.LastName" />
            <ValidationMessage For="() => User.LastName" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="email" class="form-label">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="User.Email" />
            <ValidationMessage For="() => User.Email" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="phone" class="form-label">Phone:</label>
            <InputText id="phone" class="form-control" @bind-Value="User.Phone" />
            <ValidationMessage For="() => User.Phone" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="age" class="form-label">Age:</label>
            <InputNumber id="age" class="form-control" @bind-Value="User.Age" />
            <ValidationMessage For="() => User.Age" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="location" class="form-label">Location:</label>
            <InputText id="location" class="form-control" @bind-Value="User.Location" />
            <ValidationMessage For="() => User.Location" class="text-danger" />
        </div>
    </fieldset>

    <fieldset>
        <legend>Additional Information</legend>

        <div class="mb-3">
            <label for="annualIncome" class="form-label">Annual Income ($):</label>
            <InputNumber id="annualIncome" class="form-control" @bind-Value="User.AnnualIncome" />
            <ValidationMessage For="() => User.AnnualIncome" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="numPreownedPets" class="form-label">Number of Owned Pets:</label>
            <InputNumber id="numPreownedPets" class="form-control" @bind-Value="User.NumPreownedPets" />
            <ValidationMessage For="() => User.NumPreownedPets" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="numDogsAdoptedThisCalendarYear" class="form-label">Dogs Adopted This Calendar Year:</label>
            <InputNumber id="numDogsAdoptedThisCalendarYear" class="form-control" @bind-Value="User.NumDogsAdoptedThisCalendarYear" />
            <ValidationMessage For="() => User.NumDogsAdoptedThisCalendarYear" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="userIsAdmin" class="form-label">Admin User:</label>
            <InputCheckbox id="userIsAdmin" class="form-check-input" @bind-Value="User.UserIsAdmin" />
            <ValidationMessage For="() => User.UserIsAdmin" class="text-danger" />
        </div>
    </fieldset>

    <button type="submit" class="btn btn-primary" onsubmit="AddUser">Register Account</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    protected User User { get; set; } = new();

    private async Task AddUser()
    {
        using var context = DbFactory.CreateDbContext();
        context.User.Add(User);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/register/success");
    }
}


