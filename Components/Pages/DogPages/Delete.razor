@page "/dogs/delete"
@using Microsoft.EntityFrameworkCore
@using PetHouse.Models
@inject IDbContextFactory<PetHouse.Data.PetHouseContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<div>
    <h2>Delete this listing?</h2>
    <hr />
    @if (dog is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-4">Name:</dt>
            <dd class="col-sm-8">@dog.DogName</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Breed:</dt>
            <dd class="col-sm-8">@dog.DogBreed</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Age:</dt>
            <dd class="col-sm-8">@dog.DogAge</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Size:</dt>
            <dd class="col-sm-8">@dog.DogSize</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Weight:</dt>
            <dd class="col-sm-8">@dog.DogWeight lbs</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Color:</dt>
            <dd class="col-sm-8">@dog.DogColor</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Personality:</dt>
            <dd class="col-sm-8">@dog.DogPersonality</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Health information:</dt>
            <dd class="col-sm-8">@dog.DogHealthInformation</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Friendly with children?</dt>
            <dd class="col-sm-8">@EvalCondition(dog.DogIsFriendlyWithChildren)</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Friendly with cats?</dt>
            <dd class="col-sm-8">@EvalCondition(dog.DogIsFriendlyWithCats)</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Adopted?</dt>
            <dd class="col-sm-8">@EvalCondition(dog.DogIsAdopted)</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-4">Picture URL:</dt>
            <dd class="col-sm-8">@dog.DogPicture</dd>
        </dl>
        
        <dl class="row">
            <dt class="col-sm-4">Adopter:</dt>
            <dd class="col-sm-8">
                @if (dog.DogIsAdopted && dog.Adopter != null)
                {
                    string name = dog.Adopter.FirstName + dog.Adopter.LastName;
                    <a href="/user?id=@dog.Adopter.Id">@name</a>
                }
                else
                {
                    <text>N/A</text>
                }
            </dd>
        </dl>

        <EditForm method="post" Model="dog" OnValidSubmit="DeleteDog" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(dog is null)">Delete</button> |
            <a href="/listings">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Dog? dog;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        dog = await context.Dog.FirstOrDefaultAsync(m => m.Id == Id);

        if (dog is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    // Displays yes/no instead of true/false for bool properties
    private string EvalCondition(bool cond)
    {
        return ( cond ? "Yes" : "No" );
    }

    private async Task DeleteDog()
    {
        using var context = DbFactory.CreateDbContext();
        context.Dog.Remove(dog!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/listings");
    }
}
