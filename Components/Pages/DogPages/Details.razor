@page "/dog"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using PetHouse.Models
@inject IDbContextFactory<PetHouse.Data.PetHouseContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Now Viewing: @NameOfDog</PageTitle>

<div class="container float-start p-0">
    @if (dog is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <h2>@dog.DogName</h2>
        <hr />

        <div class="row">

            <div class="col-sm-8 col-xxl-6">
                <dl class="row">
                    <dt class="col-sm-4">Name:</dt>
                    <dd class="col-sm-8">@dog.DogName</dd>

                    <dt class="col-sm-4">Breed:</dt>
                    <dd class="col-sm-8">@dog.DogBreed</dd>

                    <dt class="col-sm-4">Age:</dt>
                    <dd class="col-sm-8">@dog.DogAge</dd>

                    <dt class="col-sm-4">Size:</dt>
                    <dd class="col-sm-8">@dog.DogSize</dd>

                    <dt class="col-sm-4">Weight:</dt>
                    <dd class="col-sm-8">@dog.DogWeight lbs</dd>

                    <dt class="col-sm-4">Color:</dt>
                    <dd class="col-sm-8">@dog.DogColor</dd>

                    <dt class="col-sm-4">Personality:</dt>
                    <dd class="col-sm-8">@dog.DogPersonality</dd>

                    <dt class="col-sm-4">Health information:</dt>
                    <dd class="col-sm-8">@dog.DogHealthInformation</dd>

                    <dt class="col-sm-4">Friendly with children?</dt>
                    <dd class="col-sm-8">@EvalCondition(dog.DogIsFriendlyWithChildren)</dd>

                    <dt class="col-sm-4">Friendly with cats?</dt>
                    <dd class="col-sm-8">@EvalCondition(dog.DogIsFriendlyWithCats)</dd>

                    <dt class="col-sm-4">Adopted?</dt>
                    <dd class="col-sm-8">@EvalCondition(dog.DogIsAdopted)</dd>

                    <dt class="col-sm-4">Adopter:</dt>
                    <dd class="col-sm-8">
                        @if (dog.DogIsAdopted && dog.Adopter != null)
                        {
                            string name = dog.Adopter.FirstName + dog.Adopter.LastName;
                            <a href="/user?id=@dog.Adopter.Id">@name</a>
                        }
                        else
                        {
                            <text>N/A</text>
                        }
                    </dd>
                </dl>

                <div>
                    <button @onclick="@( () => Redirect($"/adopt?dogId={dog.Id}") )"
                            class="btn btn-primary" type="button">
                        Adopt!
                    </button>
                </div>
            </div>

            <div class="col-sm-4 col-xxl-3">
                <figure class="container">
                    <img src="@dog.DogPicture" class="img-fluid" />
                </figure>
            </div>

        </div>
    }
</div>

@code {
    private Dog? dog;
    private string NameOfDog = "Dog";   // for use in PageTitle

    [SupplyParameterFromQuery(Name = "id")]
    private int Id { get; set; }

    // Displays yes/no instead of true/false for bool properties
    private string EvalCondition(bool cond)
    {
        return ( cond ? "Yes" : "No" );
    }

    private void Redirect(string route)
    {
        NavigationManager.NavigateTo(route);
    }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        dog = await context.Dog.FirstOrDefaultAsync(m => m.Id == Id);

        if (dog is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
        else
        {
            // Update w/ DogName iff neither dog nor DogName are null
            NameOfDog = dog.DogName ?? NameOfDog;
        }
    }
}
