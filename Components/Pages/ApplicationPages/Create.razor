@page "/applications/create"
@using Microsoft.EntityFrameworkCore
@using PetHouse.Models
@inject IDbContextFactory<PetHouse.Data.PetHouseContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Application</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Application" OnValidSubmit="AddApplication" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="datesubmission" class="form-label">DateSubmission:</label> 
                <InputDate id="datesubmission" @bind-Value="Application.DateSubmission" class="form-control" /> 
                <ValidationMessage For="() => Application.DateSubmission" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="submissionmessage" class="form-label">SubmissionMessage:</label> 
                <InputText id="submissionmessage" @bind-Value="Application.SubmissionMessage" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Application.SubmissionMessage" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dateevaluation" class="form-label">DateEvaluation:</label> 
                <InputDate id="dateevaluation" @bind-Value="Application.DateEvaluation" class="form-control" /> 
                <ValidationMessage For="() => Application.DateEvaluation" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="evaluationmessage" class="form-label">EvaluationMessage:</label> 
                <InputText id="evaluationmessage" @bind-Value="Application.EvaluationMessage" class="form-control" /> 
                <ValidationMessage For="() => Application.EvaluationMessage" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label> 
                <InputNumber id="status" @bind-Value="Application.Status" class="form-control" /> 
                <ValidationMessage For="() => Application.Status" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/applications">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Application Application { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddApplication()
    {
        using var context = DbFactory.CreateDbContext();
        context.Application.Add(Application);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/applications");
    }
}
