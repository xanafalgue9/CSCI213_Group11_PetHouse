@page "/applications/delete"
@using Microsoft.EntityFrameworkCore
@using PetHouse.Models
@inject IDbContextFactory<PetHouse.Data.PetHouseContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<div>
    <h2>Delete this application?</h2>
    <hr />
    @if (application is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-3">Adopter:</dt>
            <dd class="col-sm-9">
                @if (application.Adopter != null)
                {
                    string name = application.Adopter.FirstName + " " +
                    application.Adopter.LastName;
                    <a href="@($"/users/details?id={application.Adopter.Id}")">@name</a>
                }
                else
                {
                    <span>N/A</span>
                }
            </dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-3">Dog:</dt>
            <dd class="col-sm-9">
                @if (application.Pet != null)
                {
                    <a href="@($"/dog?id={application.Pet.Id}")">@application.Pet.DogName</a>
                }
                else
                {
                    <span>N/A</span>
                }
            </dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-3">Status:</dt>
            <dd class="col-sm-9">
                @if (application.Status == 0)
                {
                    <span>Submitted</span>
                }
                else if (application.Status == 1)
                {
                    <span>Accepted</span>
                }
                else if (application.Status == -1)
                {
                    <span>Declined</span>
                }
                else
                {
                    <span>Unknown</span>
                }
            </dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-3">Date submitted:</dt>
            <dd class="col-sm-9">@application.DateSubmission.ToString()</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-3">Submission message:</dt>
            <dd class="col-sm-9">@application.SubmissionMessage</dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-3">Date evaluated:</dt>
            <dd class="col-sm-9">
                @if (application.Status != 0)
                {
                    <span>@application.DateEvaluation.ToString()</span>
                }
                else
                {
                    <span>N/A</span>
                }
            </dd>
        </dl>

        <dl class="row">
            <dt class="col-sm-3">Evaluation message:</dt>
            <dd class="col-sm-9">
                @if (application.Status != 0)
                {
                    <span>@application.EvaluationMessage</span>
                }
                else
                {
                    <span>N/A</span>
                }
            </dd>
        </dl>

        <EditForm method="post" Model="application" OnValidSubmit="DeleteApplication" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(application is null)">Delete</button> |
            <a href="/applications">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Application? application;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        application = await context.Application.FirstOrDefaultAsync(m => m.Id == Id);

        if (application is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteApplication()
    {
        using var context = DbFactory.CreateDbContext();
        context.Application.Remove(application!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/applications");
    }
}
